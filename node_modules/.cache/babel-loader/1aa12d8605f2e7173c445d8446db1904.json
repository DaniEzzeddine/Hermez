{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Camera = function (_Component) {\n  _inherits(Camera, _Component);\n\n  function Camera() {\n    _classCallCheck(this, Camera);\n\n    return _possibleConstructorReturn(this, (Camera.__proto__ || Object.getPrototypeOf(Camera)).apply(this, arguments));\n  }\n\n  _createClass(Camera, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var _props = this.props,\n          video = _props.video,\n          audio = _props.audio;\n\n      if (navigator.mediaDevices) {\n        navigator.mediaDevices.getUserMedia({\n          video: video,\n          audio: audio\n        }).then(function (mediaStream) {\n          _this2.setState({\n            mediaStream: mediaStream\n          });\n\n          _this2.video.srcObject = mediaStream;\n\n          _this2.video.play();\n        }).catch(function (error) {\n          return error;\n        });\n      }\n    }\n  }, {\n    key: 'capture',\n    value: function capture() {\n      var mediaStreamTrack = this.state.mediaStream.getVideoTracks()[0];\n      var imageCapture = new window.ImageCapture(mediaStreamTrack);\n      return imageCapture.takePhoto();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement('div', {\n        style: this.props.style\n      }, this.props.children, React.createElement('video', {\n        style: styles.base,\n        ref: function ref(video) {\n          _this3.video = video;\n        }\n      }));\n    }\n  }]);\n\n  return Camera;\n}(Component);\n\nCamera.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  audio: PropTypes.bool,\n  video: PropTypes.bool,\n  children: PropTypes.element,\n  style: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n} : {};\nCamera.defaultProps = {\n  audio: false,\n  video: true,\n  style: {},\n  children: null\n};\nexport default Camera;\nvar styles = {\n  base: {\n    width: '100%',\n    height: '100%'\n  }\n};","map":null,"metadata":{},"sourceType":"module"}